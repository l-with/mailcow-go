/*
mailcow API

mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// EditDomainRatelimitsRequest struct for EditDomainRatelimitsRequest
type EditDomainRatelimitsRequest struct {
	Attr *EditMailboxRatelimitsRequestAttr `json:"attr,omitempty"`
	// contains list of domains you want to edit the ratelimit of
	Items map[string]interface{} `json:"items,omitempty"`
}

// NewEditDomainRatelimitsRequest instantiates a new EditDomainRatelimitsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditDomainRatelimitsRequest() *EditDomainRatelimitsRequest {
	this := EditDomainRatelimitsRequest{}
	return &this
}

// NewEditDomainRatelimitsRequestWithDefaults instantiates a new EditDomainRatelimitsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditDomainRatelimitsRequestWithDefaults() *EditDomainRatelimitsRequest {
	this := EditDomainRatelimitsRequest{}
	return &this
}

// GetAttr returns the Attr field value if set, zero value otherwise.
func (o *EditDomainRatelimitsRequest) GetAttr() EditMailboxRatelimitsRequestAttr {
	if o == nil || o.Attr == nil {
		var ret EditMailboxRatelimitsRequestAttr
		return ret
	}
	return *o.Attr
}

// GetAttrOk returns a tuple with the Attr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditDomainRatelimitsRequest) GetAttrOk() (*EditMailboxRatelimitsRequestAttr, bool) {
	if o == nil || o.Attr == nil {
		return nil, false
	}
	return o.Attr, true
}

// HasAttr returns a boolean if a field has been set.
func (o *EditDomainRatelimitsRequest) HasAttr() bool {
	if o != nil && o.Attr != nil {
		return true
	}

	return false
}

// SetAttr gets a reference to the given EditMailboxRatelimitsRequestAttr and assigns it to the Attr field.
func (o *EditDomainRatelimitsRequest) SetAttr(v EditMailboxRatelimitsRequestAttr) {
	o.Attr = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *EditDomainRatelimitsRequest) GetItems() map[string]interface{} {
	if o == nil || o.Items == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditDomainRatelimitsRequest) GetItemsOk() (map[string]interface{}, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *EditDomainRatelimitsRequest) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given map[string]interface{} and assigns it to the Items field.
func (o *EditDomainRatelimitsRequest) SetItems(v map[string]interface{}) {
	o.Items = v
}

func (o EditDomainRatelimitsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attr != nil {
		toSerialize["attr"] = o.Attr
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableEditDomainRatelimitsRequest struct {
	value *EditDomainRatelimitsRequest
	isSet bool
}

func (v NullableEditDomainRatelimitsRequest) Get() *EditDomainRatelimitsRequest {
	return v.value
}

func (v *NullableEditDomainRatelimitsRequest) Set(val *EditDomainRatelimitsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEditDomainRatelimitsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEditDomainRatelimitsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditDomainRatelimitsRequest(val *EditDomainRatelimitsRequest) *NullableEditDomainRatelimitsRequest {
	return &NullableEditDomainRatelimitsRequest{value: val, isSet: true}
}

func (v NullableEditDomainRatelimitsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditDomainRatelimitsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
