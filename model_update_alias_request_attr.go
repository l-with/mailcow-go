/*
mailcow API

mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// UpdateAliasRequestAttr struct for UpdateAliasRequestAttr
type UpdateAliasRequestAttr struct {
	// is alias active or not
	Active *bool `json:"active,omitempty"`
	// alias address, for catchall use \"@domain.tld\"
	Address *string `json:"address,omitempty"`
	// destination address, comma separated
	Goto *string `json:"goto,omitempty"`
	// learn as ham
	GotoHam *bool `json:"goto_ham,omitempty"`
	// silently ignore
	GotoNull *bool `json:"goto_null,omitempty"`
	// learn as spam
	GotoSpam       *bool   `json:"goto_spam,omitempty"`
	PrivateComment *string `json:"private_comment,omitempty"`
	PublicComment  *string `json:"public_comment,omitempty"`
	// toggle visibility as selectable sender in SOGo
	SogoVisible *bool `json:"sogo_visible,omitempty"`
}

// NewUpdateAliasRequestAttr instantiates a new UpdateAliasRequestAttr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAliasRequestAttr() *UpdateAliasRequestAttr {
	this := UpdateAliasRequestAttr{}
	return &this
}

// NewUpdateAliasRequestAttrWithDefaults instantiates a new UpdateAliasRequestAttr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAliasRequestAttrWithDefaults() *UpdateAliasRequestAttr {
	this := UpdateAliasRequestAttr{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *UpdateAliasRequestAttr) SetActive(v bool) {
	o.Active = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *UpdateAliasRequestAttr) SetAddress(v string) {
	o.Address = &v
}

// GetGoto returns the Goto field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetGoto() string {
	if o == nil || o.Goto == nil {
		var ret string
		return ret
	}
	return *o.Goto
}

// GetGotoOk returns a tuple with the Goto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetGotoOk() (*string, bool) {
	if o == nil || o.Goto == nil {
		return nil, false
	}
	return o.Goto, true
}

// HasGoto returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasGoto() bool {
	if o != nil && o.Goto != nil {
		return true
	}

	return false
}

// SetGoto gets a reference to the given string and assigns it to the Goto field.
func (o *UpdateAliasRequestAttr) SetGoto(v string) {
	o.Goto = &v
}

// GetGotoHam returns the GotoHam field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetGotoHam() bool {
	if o == nil || o.GotoHam == nil {
		var ret bool
		return ret
	}
	return *o.GotoHam
}

// GetGotoHamOk returns a tuple with the GotoHam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetGotoHamOk() (*bool, bool) {
	if o == nil || o.GotoHam == nil {
		return nil, false
	}
	return o.GotoHam, true
}

// HasGotoHam returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasGotoHam() bool {
	if o != nil && o.GotoHam != nil {
		return true
	}

	return false
}

// SetGotoHam gets a reference to the given bool and assigns it to the GotoHam field.
func (o *UpdateAliasRequestAttr) SetGotoHam(v bool) {
	o.GotoHam = &v
}

// GetGotoNull returns the GotoNull field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetGotoNull() bool {
	if o == nil || o.GotoNull == nil {
		var ret bool
		return ret
	}
	return *o.GotoNull
}

// GetGotoNullOk returns a tuple with the GotoNull field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetGotoNullOk() (*bool, bool) {
	if o == nil || o.GotoNull == nil {
		return nil, false
	}
	return o.GotoNull, true
}

// HasGotoNull returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasGotoNull() bool {
	if o != nil && o.GotoNull != nil {
		return true
	}

	return false
}

// SetGotoNull gets a reference to the given bool and assigns it to the GotoNull field.
func (o *UpdateAliasRequestAttr) SetGotoNull(v bool) {
	o.GotoNull = &v
}

// GetGotoSpam returns the GotoSpam field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetGotoSpam() bool {
	if o == nil || o.GotoSpam == nil {
		var ret bool
		return ret
	}
	return *o.GotoSpam
}

// GetGotoSpamOk returns a tuple with the GotoSpam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetGotoSpamOk() (*bool, bool) {
	if o == nil || o.GotoSpam == nil {
		return nil, false
	}
	return o.GotoSpam, true
}

// HasGotoSpam returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasGotoSpam() bool {
	if o != nil && o.GotoSpam != nil {
		return true
	}

	return false
}

// SetGotoSpam gets a reference to the given bool and assigns it to the GotoSpam field.
func (o *UpdateAliasRequestAttr) SetGotoSpam(v bool) {
	o.GotoSpam = &v
}

// GetPrivateComment returns the PrivateComment field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetPrivateComment() string {
	if o == nil || o.PrivateComment == nil {
		var ret string
		return ret
	}
	return *o.PrivateComment
}

// GetPrivateCommentOk returns a tuple with the PrivateComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetPrivateCommentOk() (*string, bool) {
	if o == nil || o.PrivateComment == nil {
		return nil, false
	}
	return o.PrivateComment, true
}

// HasPrivateComment returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasPrivateComment() bool {
	if o != nil && o.PrivateComment != nil {
		return true
	}

	return false
}

// SetPrivateComment gets a reference to the given string and assigns it to the PrivateComment field.
func (o *UpdateAliasRequestAttr) SetPrivateComment(v string) {
	o.PrivateComment = &v
}

// GetPublicComment returns the PublicComment field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetPublicComment() string {
	if o == nil || o.PublicComment == nil {
		var ret string
		return ret
	}
	return *o.PublicComment
}

// GetPublicCommentOk returns a tuple with the PublicComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetPublicCommentOk() (*string, bool) {
	if o == nil || o.PublicComment == nil {
		return nil, false
	}
	return o.PublicComment, true
}

// HasPublicComment returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasPublicComment() bool {
	if o != nil && o.PublicComment != nil {
		return true
	}

	return false
}

// SetPublicComment gets a reference to the given string and assigns it to the PublicComment field.
func (o *UpdateAliasRequestAttr) SetPublicComment(v string) {
	o.PublicComment = &v
}

// GetSogoVisible returns the SogoVisible field value if set, zero value otherwise.
func (o *UpdateAliasRequestAttr) GetSogoVisible() bool {
	if o == nil || o.SogoVisible == nil {
		var ret bool
		return ret
	}
	return *o.SogoVisible
}

// GetSogoVisibleOk returns a tuple with the SogoVisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAliasRequestAttr) GetSogoVisibleOk() (*bool, bool) {
	if o == nil || o.SogoVisible == nil {
		return nil, false
	}
	return o.SogoVisible, true
}

// HasSogoVisible returns a boolean if a field has been set.
func (o *UpdateAliasRequestAttr) HasSogoVisible() bool {
	if o != nil && o.SogoVisible != nil {
		return true
	}

	return false
}

// SetSogoVisible gets a reference to the given bool and assigns it to the SogoVisible field.
func (o *UpdateAliasRequestAttr) SetSogoVisible(v bool) {
	o.SogoVisible = &v
}

func (o UpdateAliasRequestAttr) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Goto != nil {
		toSerialize["goto"] = o.Goto
	}
	if o.GotoHam != nil {
		toSerialize["goto_ham"] = o.GotoHam
	}
	if o.GotoNull != nil {
		toSerialize["goto_null"] = o.GotoNull
	}
	if o.GotoSpam != nil {
		toSerialize["goto_spam"] = o.GotoSpam
	}
	if o.PrivateComment != nil {
		toSerialize["private_comment"] = o.PrivateComment
	}
	if o.PublicComment != nil {
		toSerialize["public_comment"] = o.PublicComment
	}
	if o.SogoVisible != nil {
		toSerialize["sogo_visible"] = o.SogoVisible
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAliasRequestAttr struct {
	value *UpdateAliasRequestAttr
	isSet bool
}

func (v NullableUpdateAliasRequestAttr) Get() *UpdateAliasRequestAttr {
	return v.value
}

func (v *NullableUpdateAliasRequestAttr) Set(val *UpdateAliasRequestAttr) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAliasRequestAttr) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAliasRequestAttr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAliasRequestAttr(val *UpdateAliasRequestAttr) *NullableUpdateAliasRequestAttr {
	return &NullableUpdateAliasRequestAttr{value: val, isSet: true}
}

func (v NullableUpdateAliasRequestAttr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAliasRequestAttr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
