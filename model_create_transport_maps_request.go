/*
mailcow API

mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateTransportMapsRequest struct for CreateTransportMapsRequest
type CreateTransportMapsRequest struct {
	// 1 for a active transport map 0 for a disabled transport map
	Active      *float32 `json:"active,omitempty"`
	Destination *string  `json:"destination,omitempty"`
	Nexthop     *string  `json:"nexthop,omitempty"`
	// the password for the smtp user
	Password *string `json:"password,omitempty"`
	// the username used to authenticate
	Username *string `json:"username,omitempty"`
}

// NewCreateTransportMapsRequest instantiates a new CreateTransportMapsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransportMapsRequest() *CreateTransportMapsRequest {
	this := CreateTransportMapsRequest{}
	return &this
}

// NewCreateTransportMapsRequestWithDefaults instantiates a new CreateTransportMapsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransportMapsRequestWithDefaults() *CreateTransportMapsRequest {
	this := CreateTransportMapsRequest{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CreateTransportMapsRequest) GetActive() float32 {
	if o == nil || o.Active == nil {
		var ret float32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransportMapsRequest) GetActiveOk() (*float32, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CreateTransportMapsRequest) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given float32 and assigns it to the Active field.
func (o *CreateTransportMapsRequest) SetActive(v float32) {
	o.Active = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *CreateTransportMapsRequest) GetDestination() string {
	if o == nil || o.Destination == nil {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransportMapsRequest) GetDestinationOk() (*string, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *CreateTransportMapsRequest) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *CreateTransportMapsRequest) SetDestination(v string) {
	o.Destination = &v
}

// GetNexthop returns the Nexthop field value if set, zero value otherwise.
func (o *CreateTransportMapsRequest) GetNexthop() string {
	if o == nil || o.Nexthop == nil {
		var ret string
		return ret
	}
	return *o.Nexthop
}

// GetNexthopOk returns a tuple with the Nexthop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransportMapsRequest) GetNexthopOk() (*string, bool) {
	if o == nil || o.Nexthop == nil {
		return nil, false
	}
	return o.Nexthop, true
}

// HasNexthop returns a boolean if a field has been set.
func (o *CreateTransportMapsRequest) HasNexthop() bool {
	if o != nil && o.Nexthop != nil {
		return true
	}

	return false
}

// SetNexthop gets a reference to the given string and assigns it to the Nexthop field.
func (o *CreateTransportMapsRequest) SetNexthop(v string) {
	o.Nexthop = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateTransportMapsRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransportMapsRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateTransportMapsRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateTransportMapsRequest) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CreateTransportMapsRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransportMapsRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateTransportMapsRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CreateTransportMapsRequest) SetUsername(v string) {
	o.Username = &v
}

func (o CreateTransportMapsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Nexthop != nil {
		toSerialize["nexthop"] = o.Nexthop
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTransportMapsRequest struct {
	value *CreateTransportMapsRequest
	isSet bool
}

func (v NullableCreateTransportMapsRequest) Get() *CreateTransportMapsRequest {
	return v.value
}

func (v *NullableCreateTransportMapsRequest) Set(val *CreateTransportMapsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransportMapsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransportMapsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransportMapsRequest(val *CreateTransportMapsRequest) *NullableCreateTransportMapsRequest {
	return &NullableCreateTransportMapsRequest{value: val, isSet: true}
}

func (v NullableCreateTransportMapsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransportMapsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
